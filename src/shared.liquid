<!-- import Highcharts + Chartkick libraries -->
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-more.js"></script>
<script src="https://code.highcharts.com/modules/pattern-fill.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartkick@5.0.1/dist/chartkick.min.js"></script>

{% assign chart_id = "chart-" | append_random %}

<!-- Shared chart creation function -->
<script>
  function createMatomoChart(chartId, height, options = {}) {
    const rawData = {{ IDX_1 | json }};

    if (rawData.result == 'error' && rawData.message) {
      document.getElementById(chartId).innerHTML = `<div class="title">Error</div><div class="description clamp--4">${rawData.message}</div>`;
      return;
    }

    // Build chart data dynamically from IDX_1 data
    var pageviewsData = [
      {% for item in IDX_1 %}
        {% if item[1] == empty %}
          ["{{ item[0] }}", 0],
        {% else %}
          ["{{ item[0] }}", {{ item[1].nb_actions | default: 0 }}],
        {% endif %}
      {% endfor %}
    ];

    var visitorsData = [
      {% for item in IDX_1 %}
        {% if item[1] == empty %}
          ["{{ item[0] }}", 0],
        {% else %}
          ["{{ item[0] }}", {{ item[1].nb_uniq_visitors | default: 0 }}],
        {% endif %}
      {% endfor %}
    ];

    var data = [
      { name: "Pageviews", data: pageviewsData },
      { name: "Unique Visitors", data: visitorsData }
    ];

    // Create the chart using native Highcharts for pattern fill support
    var createChart = function() {
      Highcharts.chart(chartId, {
        chart: {
          type: "spline",
          height: height,
          animation: false,
          spacing: [10, 10, 5, 10]
        },
        title: {
          text: null
        },
        plotOptions: {
          series: {
            animation: false,
            enableMouseTracking: false,
            states: {
              hover: { enabled: false }
            },
            marker: {
              enabled: false
            },
            lineWidth: height > 200 ? 4 : 3
          }
        },
        series: [{
          data: pageviewsData,
          color: "#000000",
          name: "Pageviews",
          zIndex: 2
        }, {
          data: visitorsData,
          name: "Unique Visitors",
          zIndex: 1,
          lineWidth: height > 200 ? 5 : 4,
          color: {
            pattern: {
              image: "https://usetrmnl.com/images/grayscale/gray-5.png",
              width: 12,
              height: 12
            }
          }
        }],
        tooltip: { enabled: false },
        legend: { enabled: false },
        yAxis: {
          labels: {
            style: {
              fontSize: height > 200 ? "16px" : height > 150 ? "14px" : "12px",
              color: "#000000"
            }
          },
          gridLineDashStyle: "shortdot",
          gridLineWidth: 1,
          gridLineColor: "#000000",
          tickAmount: height > 200 ? 5 : height > 150 ? 4 : 3,
          title: {
            text: null
          }
        },
        xAxis: {
          type: "datetime",
          labels: {
            style: {
              fontSize: height > 200 ? "16px" : height > 150 ? "14px" : "12px",
              color: "#000000"
            }
          },
          lineWidth: 0,
          gridLineDashStyle: "dot",
          tickWidth: 1,
          tickLength: 0,
          gridLineWidth: 1,
          gridLineColor: "#000000",
          tickPixelInterval: height > 200 ? 120 : height > 150 ? 100 : 80,
          title: {
            text: null
          }
        },
        credits: {
          enabled: false
        }
      });
    };

    // Ensure chart loads before plugin render is generated
    if ("Chartkick" in window) {
      createChart();
    } else {
      window.addEventListener("chartkick:load", createChart, true);
    }
  }
</script>

{% assign date_range_labels = "last7:Last 7 days,last14:Last 14 days,last30:Last 30 days,last90:Last 90 days,lastWeek:Previous week,lastMonth:Previous month,lastYear:Previous year" | split: "," %}
{% assign date_range_display = "" %}
{% for mapping in date_range_labels %}
  {% assign pair = mapping | split: ":" %}
  {% if pair[0] == trmnl.plugin_settings.custom_fields_values.matomo_date_range %}
    {% assign date_range_display = pair[1] %}
    {% break %}
  {% endif %}
{% endfor %}

<!-- Calculate totals from real data dynamically -->
{% assign total_pageviews = 0 %}
{% assign total_visitors = 0 %}
{% assign total_time_length = 0 %}
{% assign total_visits = 0 %}

<!-- Loop through all dates in IDX_1 to calculate totals -->
{% for item in IDX_1 %}
  {% if item[1] != empty and item[1].nb_actions %}
    {% assign total_pageviews = total_pageviews | plus: item[1].nb_actions %}
    {% assign total_visitors = total_visitors | plus: item[1].nb_uniq_visitors %}
    {% assign total_time_length = total_time_length | plus: item[1].sum_visit_length %}
    {% assign total_visits = total_visits | plus: item[1].nb_visits %}
  {% endif %}
{% endfor %}

{% assign avg_time_seconds = 0 %}
{% assign time_display = "0s" %}
{% if total_visits > 0 %}
  {% assign avg_time_seconds = total_time_length | divided_by: total_visits | floor %}
  {% assign minutes = avg_time_seconds | divided_by: 60 | floor %}
  {% assign seconds = avg_time_seconds | modulo: 60 | floor %}

  {% if minutes > 0 %}
    {% if seconds > 0 %}
      {% assign time_display = minutes | append: "m " | append: seconds | append: "s" %}
    {% else %}
      {% assign time_display = minutes | append: "m" %}
    {% endif %}
  {% else %}
    {% assign time_display = seconds | append: "s" %}
  {% endif %}
{% endif %}

